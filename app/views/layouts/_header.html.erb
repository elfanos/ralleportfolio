<script>

    /***
     * content before the redraw intro
     * of home page
     * */
    function setTimeOutBeforeTheContentMoveIn(navBars) {
        setTimeout(function () {
            moveInContentToPage(-100,navBars.navContact,'contacts');
            moveInContentToPage(-100,navBars.navAbout,'about');
            moveInContentToPage(-100,navBars.navProjects,'projects');
        },2000)
    }

    function showHeaders(navBars){
        $(navBars.navAbout).show();
        $(navBars.navContact).show();
        $(navBars.navProjects).show();
    }

    /**
     * Set dem marginvalues for drop in animation
     */
    function setMarginValuesForContent(navBars) {
        //nav about init
        navBars.navAbout.style.marginLeft = "-100px";
        //nav contact init
        navBars.navContact.style.marginRight = "-100px";
        //nav project init
        navBars.navProjects.style.marginBottom = "-100px";

        setTimeout(function () {
            showHeaders(navBars);
        },500);
    }
    /***
     * Move link content by using margin
     * Apply the margin based on which content
     * thats is going to move
     * Increasing margin recursive to get the move
     * animation
     * @param margin
     * @param element
     * @param style
     * */
    function moveInContentToPage(margin, element, style) {
        switch (style){
            case 'about':
                setTimeout(function () {
                    if(margin < 1) {
                        margin += 5;
                        element.style.marginLeft = margin + "px";
                        moveInContentToPage(margin, element, style);
                    }
                }, 10);
                break;
            case 'music':
                setTimeout(function () {
                    if(margin < 1) {
                        margin += 5;
                        element.style.marginTop = margin + "px";
                        moveInContentToPage(margin, element, style);
                    }
                }, 10);
                break;
            case 'projects':
                setTimeout(function () {
                    if(margin < 1) {
                        margin += 5;
                        element.style.marginBottom = margin + "px";
                        moveInContentToPage(margin, element, style);
                    }
                }, 10);
                break;
            case 'contacts':
                setTimeout(function () {
                    if(margin < 1) {
                        margin += 5;
                        element.style.marginRight = margin + "px";
                        moveInContentToPage(margin, element, style);
                    }
                }, 10);
                break;
        }
    }

    /**
     * variables which keep track of each states
     * */
    var stateManager = {
        aboutForward: null,
        aboutBack: null,
        projectForward: null,
        projectBack: null,
        contactForward: null,
        contactBack: null
    };
    var stateOfButtons = {
        contactState: false,
        aboutState: false,
        projectState: false
    };
    var hoverStates = {
        contact: false,
        about: false,
        project: false
    };
    var stateOfPage = {
        projects:false,
        contact:false,
        about:false
    };

    /**
     * Cross browser settings for Object.size
     * safari give one extra number in object.size
     *
     * @param object usally basic html node
     * */
    function loopLength(object){
        if(navigator.userAgent.indexOf("Safari") != -1 ) {
            if(navigator.userAgent.indexOf("Chrome") != -1 ){
                return Object.size(object);
            }else {
                return (Object.size(object) - 1);
            }
        }else{
            return Object.size(object);
        }
    };
    var stateKeeper = new StateKeeper();
    stateKeeper._instance = stateKeeper;
    window.addEventListener('popstate', function(e) {
        var character = e.state;

        if (character == null) {
            console.log("character null xD")
        } else {
            console.log("what is charcater in home? " + character);
            console.log("what is charcater back nav in home? " + localStorage.previousState);
            stateKeeper._setSate(character);
            stateKeeper._setPreviousState(localStorage.previousState);
            if(stateManager != undefined){
               // stateManager();
                stateKeeper._initializeState();
            }else{

            }
        }
    });


    /**
     * TextAnimation is the animation of
     * the header components, all interaction
     * is executed here
     *
     * @param context the html object
     * @param letters the letters which will be added
     * @param textClassName
     * @param backButton
     * */
    function TextAnimation(context,letters, textClassName,
                           backButton) {
        this.context = context;
        this.backButton = backButton;
        this.letters = letters;
        this.interval = [];
        this.textDivTags = [];
        this.divArray = [];
        this.textClassName = textClassName;
        this.instance = null;
        this.alreadyCreated = false;
        this.newInstance = function (classInstance) {
            this.instance = classInstance;
            alreadyCreated = true;
        };
        this.initializeLetters = function() {
            if(textClassName === 'textProject'){
            }else {
                this.context.style.width = $(window).height() + "px";
            }
            for(var i = 0; i < this.letters.length; i++){
                var div = document.createElement("div");
                div.className = "char chars"+i;
                div.id = this.textClassName;
            //    console.log("divish" + div.innerHTML);
                var innerText = document.createElement("div");
                innerText.className = "char-inner";
                innerText.innerHTML = letters[i];
                div.appendChild(innerText);
                this.context.appendChild(div);
                this.divArray.push(div);
            }
        };
        this.initializeTags = function () {
            var childs = this.context.childNodes;
            for(var i = 0; i < loopLength(childs); i++){
                this.textDivTags.push(childs[i].childNodes[0]);
            }
        };
        this._addTextHover = function () {
            var childs = this.context.childNodes;
            if(this.backButton != undefined){
                $(this.backButton).removeClass("hoverClassOut");
                $(this.backButton).addClass("hoverClass");
            }
            for(var i = 0; i < Object.size(childs); i++){
                $(childs).addClass('textHover');
                $(childs).removeClass('textHoverOut');
                if(textClassName === 'textProject'){
                    $(childs).width(($(window).width() / this.instance.letters.length) - 5 + "px");
                }else {
                    $(childs).width(($(window).height() / this.instance.letters.length) - 20 + "px");
                }
            }
        };
        this._removeTextHover = function () {
            var childs = this.context.childNodes;
            if(this.backButton != undefined){
                $(this.backButton).removeClass("hoverClass");
                $(this.backButton).addClass("hoverClassOut");
            }
            for(var i = 0; i < Object.size(childs); i++){
                $(childs).removeClass('textHover');
                $(childs).addClass('textHoverOut');
            }
        };
        this._moveCharOnTimeOut = function (textAnimation,
                                            navBar, backPressed, state) {
                var childs = this.context.childNodes;
                for(var i = 0; i < loopLength(childs); i++){
                   (function(j, instance) {
                     setTimeout(function () {
                         if(j === (Object.size(childs))){
                             instance._moveChar(childs[j].children[0], backPressed, state);
                         }else{
                             instance._moveChar(childs[j].children[0], backPressed, state);
                         }
                     }, j*250);
                     })(i, textAnimation);
                }
                (function(instance, navBar) {
                    setTimeout(function () {
                        instance._normalizePosition(navBar,
                            backPressed, textAnimation, state);
                    },2000)
                })(this, navBar, backPressed);
        };

        /**
         * Moving the char of bar into a new position
         * the new position is bottom but the amount
         * of pixels is based on which position the chars
         * have, if its a vertical char it will take height
         * in consideration if horizontal it will take width in
         * consideration.
         *
         * @param bar the given char
         * @param backButtonPressed, check if the web back button is
         *                          pressed
         * @param state, check which navbar thats being clicked
         * */
        this._moveChar = function (bar, backButtonPressed, state) {
            var position = 0;
            var width = document.body.clientWidth;
            var height = document.body.clientHeight;
            if(!backButtonPressed) {
                var interval = setInterval(function () {
                    position += 10;
                    if(state == "about") {
                        if (position < (width - 70)) {
                            bar.style.bottom = position + "px";
                        } else {
                            clearInterval(interval);
                        }
                    }else if(state == "contact"){
                        if (position < (width - 70)) {
                            bar.style.bottom = position + "px";
                        } else {
                            clearInterval(interval);
                        }
                    }else{
                        if (position < (height - 80)) {
                            bar.style.bottom = position + "px";
                        } else {
                            clearInterval(interval);
                        }
                    }
                }, 1);
            }else{
                var intervalBack = setInterval(function () {
                    position -= 10;
                    if(state == "about" || state == "contact") {
                        if (position > (70 - width)) {
                            bar.style.bottom = position + "px";
                        } else {
                            clearInterval(intervalBack);
                        }
                    }else{
                        if (position > (50 - height)) {
                            bar.style.bottom = position + "px";
                        } else {
                            clearInterval(intervalBack);
                        }
                    }
                }, 1);
            }
        };
        /**
         * normalize position on each char in the navbar
         *
         * @param navBar the current navigation bar that being normalized
         * */
        this._normalizePosition = function (navBar,backpressed,
                                            textAnimation, state) {
            this._charFadeOut();
            (function (navBar,instance,state) {
                setTimeout(function () {
                    instance._navBarNormalizedPosition(navBar,state,backpressed);
                    (function (instance, navBar,backpressed) {
                        setTimeout(function () {
                            instance._charFadeIn(navBar, textAnimation, backpressed);
                        },500)
                    })(instance, navBar,backpressed);
                }, 500);
            })(navBar,this,state);
        };
        this._charFadeOut = function () {
            var childs = this.context.childNodes;
            for(var i = 0; i < loopLength(childs); i++){
                $(childs[i].childNodes[0]).fadeOut();
            }
        };
        this._charFadeIn = function (navBar, textAnimation,backpressed) {
            console.log("char fadeish?");
            /**
             * Reset hover states
             * */
            hoverStates.project = false;
            hoverStates.contact = false;
            hoverStates.about = false;
            $(navBar).removeClass("startTransition");
            textAnimation._removeTextHover();
            navBar.style.pointerEvents = "";
            var childs = this.context.childNodes;
            for(var i = 0; i < loopLength(childs); i++){
                $(childs[i].childNodes[0]).fadeIn("slow");
                childs[i].childNodes[0].style.bottom = "";
            }
            (function (backButton) {
                setTimeout(function () {
                    if(!backpressed) {
                        $(backButton).fadeIn('slow')
                    }else{
                        $(backButton).hide();
                    }
                }, 500)
            }(this.backButton, backpressed));
        };

        /**
         * Gets the normal position when a navbar is clicked after
         * the transition effect.
         *
         * @param navBar, the navbar whom is clicked
         * @param state, which name of the navbar that is clicked
         * @param if it backpressed on the browser.
         * */
        this._navBarNormalizedPosition = function (navBar, state, backPressed) {
            switch (state){
                case "about":
                    if(!backPressed) {
                        navBar.style.marginLeft = "";
                        navBar.style.zIndex = "1001";
                        navBar.style.right = "-30px";
                        navBar.style.left = "auto";
                    }
                    //home normal values
                    else{
                        navBar.style.marginLeft = "";
                        navBar.style.zIndex = "";
                        navBar.style.right = "";
                        navBar.style.left = "";
                    }
                    break;
                case "projects":
                    console.log("inside projects?");
                    if(!backPressed) {
                        navBar.style.marginLeft = "";
                        navBar.style.zIndex = "1001";
                        navBar.style.top = "-40px";
                    }
                    else{
                        navBar.style.marginLeft = "";
                        navBar.style.zIndex = "";
                        navBar.style.top = "";
                    }
                    break;
                case "contact":
                    if(!backPressed) {
                        navBar.style.marginLeft = "";
                        navBar.style.zIndex = "1001";
                        navBar.style.left = "-30px";
                    }
                    else{
                        navBar.style.marginLeft = "";
                        navBar.style.zIndex = "";
                        navBar.style.left = "";
                    }
                    break;
            }
        }
    }
    function StateKeeper (){
        this._state = null;
        this.__previousState = null;
        this._backNavButtons = null;
        this._navBars = null;
        this._instance = null;
        this._setSate = function (state) {
            this._state = state;
        };
        this._setPreviousState = function(state){
            this.__previousState = state;
        };
        this._initializeState = function () {
          switch (this._state){
              case "home":
                  console.log("statekeeeeepeer---------------------------------");
                  this._animationBackState(this.__previousState);
                  //hide backnavbuttons on home page
                  $(this._backNavButtons.buttonAbout).hide();
                  $(this._backNavButtons.buttonProject).hide();
                  $(this._backNavButtons.buttonContact).hide();
                  (function (instance) {
                      setTimeout(function () {
                          //Do some cool animation
                          $("#content-container").
                          html("<%= escape_javascript(render partial: 'layouts/home/render_home', locals: { state: "alla?" }) %>").fadeIn("slow");
                          setMarginValuesForContent(instance._navBars);
                          setTimeOutBeforeTheContentMoveIn(instance._navBars);
                      }, 4000);
                  })(this);
                  //normal position of nav
                  break;
              case "about":
                  $("#content-container").
                  html("<%= escape_javascript(render partial: 'layouts/home/render_home', locals: { state: "alla?" }) %>").fadeOut("slow");
                  this._animationForwardState('about');
                  (function (backNavAbout) {
                      setTimeout(function () {
                          // history.pushState('about', document.title, '/' + 'about');
                          //Do some cool animation
                          $("#content-container").html("<%= escape_javascript(render partial: 'layouts/about/render_about', locals: { state: "alla?" }) %>").fadeIn("slow");
                          $(backNavAbout).fadeIn("slow");
                      }, 4000);
                  }(this._backNavButtons.buttonAbout));
                  //about position of nav
                  break;
              case "projects":
                  console.log("arewenothere??????:::::");
                  $("#content-container").
                  html("<%= escape_javascript(render partial: 'layouts/home/render_home', locals: { state: "alla?" }) %>").fadeOut("slow");
                  this._animationForwardState('projects');

                  setTimeout(function () {
                      // history.pushState('about', document.title, '/' + 'about');
                      //Do some cool animation
                      stateOfPage.projects = true;
                      $("#content-container").
                      html("<%= escape_javascript(render partial: 'layouts/projects/render_projects', locals: { state: "alla?" }) %>").fadeIn("slow");
                  }, 4000);
                  //project position of nav
                  break;
              case "contact":
                  $("#content-container").
                  html("<%= escape_javascript(render partial: 'layouts/home/render_home', locals: { state: "alla?" }) %>").fadeOut("slow");
                  $("#page-wrapper").hide();
                  this._animationForwardState('contact');
                  setTimeout(function () {
                      // history.pushState('about', document.title, '/' + 'about');
                      //Do some cool animation
                      $("#content-container").
                      html("<%= escape_javascript(render partial: 'layouts/contact/render_contact', locals: { state: "alla?" }) %>").fadeIn("slow");
                  }, 4000);
                  //contact position of nav
                  break;
            }
          };
        this._animationForwardState = function(state){
            switch (state){
                case 'about':
                    stateManager.aboutForward();
                    break;
                case 'projects':
                    stateManager.projectForward();
                    break;
                case 'contact':
                    stateManager.contactForward();
                    break;
            }
        };
        this._animationBackState = function(state){
            switch (state){
                case 'about':
                    $("#content-container").
                    html("<%= escape_javascript(render partial: 'layouts/about/render_about', locals: { state: "alla?" }) %>").fadeOut("slow");
                    stateManager.aboutBack();
                    break;
                case 'projects':
                    console.log("minemfjur--------------");
                    stateOfPage.projects = false;
                    $("#content-container").
                    html("<%= escape_javascript(render partial: 'layouts/projects/render_projects', locals: { state: "alla?" }) %>").fadeOut("slow");
                    stateManager.projectBack();
                    break;
                case 'contact':
                    $("#content-container").
                    html("<%= escape_javascript(render partial: 'layouts/contact/render_contact', locals: { state: "alla?" }) %>").fadeOut("slow");
                    stateManager.contactBack();
                    break;
                case 'home':
                    console.log("hollamab?");
                    break;
            }
        };
    }
    function StateOnPage (state, navBar, backNavButtons) {
        this._state = state;
        this._navBar = navBar;
        this._backNavButtons = backNavButtons;
        this._initializeHeader = function () {
          switch (this._state){
              case 'about':
                  this._navBar.navAbout.style.zIndex = "1001";
                  this._navBar.navAbout.style.right = "-30px";
                  this._navBar.navAbout.style.left = "auto";
                  console.log("aboute??? ");
                  $(this._backNavButtons.buttonAbout).show();
                  stateOfButtons.aboutState = true;

                  this._navBar.navProjects.style.zIndex = "0";
                  this._navBar.navContact.style.zIndex = "0";
                  break;
              case 'home':
                  stateOfButtons.contactState = false;
                  stateOfButtons.aboutState = false;
                  stateOfButtons.projectState = false;
                  this._navBar.navProjects.style.zIndex = "1001";
                  this._navBar.navContact.style.zIndex = "1001";
                  this._navBar.navAbout.style.zIndex = "1001";
                  break;
              case 'projects':
                  console.log("eyoo?? home??");
                  this._navBar.navProjects.style.zIndex = "1001";
                  this._navBar.navProjects.style.top = "-40px";
                  $(this._backNavButtons.buttonProject).show();
                  stateOfButtons.projectState = true;

                  this._navBar.navAbout.style.zIndex = "0";
                  this._navBar.navContact.style.zIndex = "0";
                  break;
              case 'contact':
                  this._navBar.navContact.style.zIndex = "1001";
                  this._navBar.navContact.style.left = "-30px";
                  $(this._backNavButtons.buttonContact).show();
                  stateOfButtons.contactState = true;

                  this._navBar.navProjects.style.zIndex = "0";
                  this._navBar.navAbout.style.zIndex = "0";
                  break;
          }
        };
    };

    $(document).ready(function(){
        var resizeContainer = document.getElementById("resize-container");
        var pageWrapper = document.getElementById("page-wrapper");
        var nodeKeeper = {};
        var navBars = {
            navAbout: document.getElementById("navAbout"),
            navProjects: document.getElementById("navProjects"),
            navContact: document.getElementById("navContact")
        };
        var backNavButtons = {
            buttonAbout: document.getElementById("backNavAbout"),
            buttonProject: document.getElementById("backNavProjects"),
            buttonContact: document.getElementById("backNavContact")
        };
        var lettersContact = ['C','O','N','T','A','C','T'];
        var lettersProject = ['P', 'R', 'O', 'J', 'E', 'C', 'T', 'S'];
        var lettersAbout = ['A','B','O','U','T'];

        /**
         * Check if object is stored otherwise
         * create new instance of textanimation
         *
         * */
        var textAnimationAbout =
            new TextAnimation(navBars.navAbout.children[0],
                lettersAbout, 'textAbout', backNavButtons.buttonAbout
            );
        textAnimationAbout.newInstance(textAnimationAbout);
        var textAnimationContact = new TextAnimation(
            navBars.navContact.children[0],
            lettersContact,'textContact', backNavButtons.buttonContact
        );
        textAnimationContact.newInstance(textAnimationContact);
        var textAnimationProject = new TextAnimation(
            navBars.navProjects.children[0],
            lettersProject,'textProject', backNavButtons.buttonProject
        );
        textAnimationProject.newInstance(textAnimationProject);
        var stateOfPage = new StateOnPage("<%= @state %>",navBars, backNavButtons);
        function initializeAllLetters() {
            if(!textAnimationProject.alreadyCreated){
                textAnimationProject.initializeLetters();
                textAnimationProject.initializeTags();
            }
        }
        function init(){
            // should be applied on resize
            $(backNavButtons.buttonAbout).hide();
            $(backNavButtons.buttonContact).hide();
            $(backNavButtons.buttonProject).hide();
            stateKeeper._backNavButtons = backNavButtons;
            stateKeeper._navBars = navBars;
           setTimeout(function () {
                textAnimationAbout.initializeLetters();
                textAnimationAbout.initializeTags();
                textAnimationContact.initializeLetters();
                textAnimationContact.initializeTags();
                 initializeAllLetters();
            },50);
           console.log("init?");
            stateOfPage._initializeHeader();
            hideDive(pageWrapper);
            fadeAwayDiv(resizeContainer);
            setMarginValuesForContent(navBars);
            setTimeOutBeforeTheContentMoveIn(navBars);
            /***
             * Back browser navigation between
             * links and stuff.
             * */
            stateManager.aboutBack = function () {
                /**
                 * previous state keeps track on
                 * which view from home that is being visualize
                 * */
                localStorage.previousState = 'about';
                $(backNavButtons.buttonAbout).fadeOut('slow');
                navBars.navAbout.style.pointerEvents = "none";
                textAnimationAbout._addTextHover();
                PagingEffect.container = pageWrapper;
                PagingEffect.about = navBars.navAbout;
                navBars.navAbout.style.zIndex = "1001";
                PagingEffect._instance = PagingEffect;
                PagingEffect._backButton = true;
                PagingEffect.applyNodes();
                PagingEffect.checkIfPaginEffectIsDon(0, 0, navBars.navAbout,
                    pageWrapper.childNodes, navBars, 'about',
                    textAnimationAbout, true);
                stateOfButtons.aboutState = false;
            };
            stateManager.aboutForward = function () {
                localStorage.previousState = 'about';
                navBars.navAbout.style.pointerEvents = "none";
                textAnimationAbout._addTextHover();
                PagingEffect.container = pageWrapper;
                PagingEffect.about = navBars.navAbout;
                navBars.navAbout.style.zIndex = "1001";
                PagingEffect._instance = PagingEffect;
                PagingEffect._backButton = true;
                PagingEffect.applyNodes();
                PagingEffect.checkIfPaginEffectIsDon(0, 0, navBars.navAbout,
                    pageWrapper.childNodes, navBars, 'about',
                    textAnimationAbout, false);
                stateOfButtons.aboutState = true;
            };
            stateManager.projectBack = function () {
                localStorage.previousState = 'projects';
                $(backNavButtons.buttonProject).hide();
                navBars.navProjects.style.pointerEvents = "none";
                textAnimationProject._addTextHover();
                PagingEffect.container = pageWrapper;
                PagingEffect.about = navBars.navAbout;
                navBars.navProjects.style.zIndex = "1001";
                PagingEffect._instance = PagingEffect;
                PagingEffect.applyNodes();
                PagingEffect.checkIfPaginEffectIsDon(0, 0, navBars.navProjects,
                    pageWrapper.childNodes, navBars, 'projects',
                    textAnimationProject, true);
                stateOfButtons.projectState = false;
            };
            stateManager.projectForward = function () {
                navBars.navProjects.style.pointerEvents = "none";
                localStorage.previousState = 'projects';
                textAnimationProject._addTextHover();
                PagingEffect.container = pageWrapper;
                PagingEffect.about = navBars.navAbout;
                navBars.navProjects.style.zIndex = "1001";
                PagingEffect._instance = PagingEffect;
                PagingEffect.applyNodes();
                PagingEffect.checkIfPaginEffectIsDon(0, 0, navBars.navProjects,
                    pageWrapper.childNodes, navBars, 'projects',
                    textAnimationProject, false);
                stateOfButtons.projectState = true;
            };
            stateManager.contactBack = function () {
                $(backNavButtons.buttonContact).hide();
                localStorage.previousState = 'contact';
                navBars.navContact.style.pointerEvents = "none";
                textAnimationContact._addTextHover();
                PagingEffect.container = pageWrapper;
                PagingEffect.about = navBars.navAbout;
                navBars.navContact.style.zIndex = "1001";
                PagingEffect._instance = PagingEffect;
                PagingEffect.applyNodes();
                PagingEffect.checkIfPaginEffectIsDon(0, 0, navBars.navContact,
                    pageWrapper.childNodes, navBars, 'contact',
                    textAnimationContact, true);
                stateOfButtons.contactState = false;
            };
            stateManager.contactForward = function () {
                navBars.navContact.style.pointerEvents = "none";
                localStorage.previousState = 'contact';
                textAnimationContact._addTextHover();
                PagingEffect.container = pageWrapper;
                PagingEffect.about = navBars.navAbout;
                navBars.navContact.style.zIndex = "1001";
                PagingEffect._instance = PagingEffect;
                PagingEffect.applyNodes();
                PagingEffect.checkIfPaginEffectIsDon(0, 0, navBars.navContact,
                    pageWrapper.childNodes, navBars, 'contact',
                    textAnimationContact, false);
                stateOfButtons.contactState = true;
            };
            /***
             * Resizing listener
             * */
            window.addEventListener('resize', function () {
            });
        }
        function shineEffectOnLoad(number) {
            setTimeout(function () {
                if(number < 8){
                    listDifferentLightningLoading(number,0);
                    number++;
                    shineEffectOnLoad(number);
                }

            }, 100);
        }


        /***
         * set and intervall between each element
         * that is going to shine, which is all the letters
         * in resize
         *
         * @param number
         * */
        function lightningEffectOnResize(number) {
            setTimeout(function () {
                if(number < 9){
                    listDifferentLightning(number,0);
                    number++;
                    lightningEffectOnResize(number);
                }
            }, 100);
        }
        /***
         * Bouncing effect on elements
         * in the list
         *
         * @param margin
         * */
        function letterVibrationsLoadingRight(margin) {
            setTimeout(function () {
                margin += 0.5;
                if(margin < 2) {
                    document.getElementsByClassName("loading-l")[0].style.marginRight = margin + "px";
                    document.getElementsByClassName("loading-a")[0].style.marginRight = margin + "px";
                    document.getElementsByClassName("loading-n")[0].style.marginRight = margin + "px";
                    document.getElementsByClassName("loading-l")[0].style.marginBottom = margin + "px";
                    document.getElementsByClassName("loading-a")[0].style.marginBottom  = margin + "px";
                    document.getElementsByClassName("loading-n")[0].style.marginBottom  = margin + "px";
                    letterVibrationsLoadingRight(margin);
                }else{
                    document.getElementsByClassName("loading-l")[0].style.marginRight = "0px";
                    document.getElementsByClassName("loading-a")[0].style.marginRight = "0px";
                    document.getElementsByClassName("loading-n")[0].style.marginRight = "0px";
                    document.getElementsByClassName("loading-l")[0].style.marginBottom = "0px";
                    document.getElementsByClassName("loading-a")[0].style.marginBottom  = "0px";
                    document.getElementsByClassName("loading-n")[0].style.marginBottom  = "0px";
                }
            },10);
        }

        function showLoadingElements(div) {
            div.style.visibility = 'visible';
            div.style.display = 'block';          // Show
            div.style.display = 'inline';         // Show
            div.style.display = 'inline-block';
        }
        /***
         * Bouncing effect on elements
         * in the list
         *
         * @param margin
         * */
        function letterVibrationsRight(margin) {
            setTimeout(function () {
                margin += 0.5;
                if(margin < 2) {
                    document.getElementsByClassName("resize-r")[0].style.marginRight = margin + "px";
                    document.getElementsByClassName("resize-z")[0].style.marginRight = margin + "px";
                    document.getElementsByClassName("resize-s")[0].style.marginRight = margin + "px";
                    document.getElementsByClassName("resize-r")[0].style.marginBottom = margin + "px";
                    document.getElementsByClassName("resize-z")[0].style.marginBottom  = margin + "px";
                    document.getElementsByClassName("resize-s")[0].style.marginBottom  = margin + "px";
                    letterVibrationsRight(margin);
                }else{
                    document.getElementsByClassName("resize-r")[0].style.marginRight ="0px";
                    document.getElementsByClassName("resize-z")[0].style.marginRight ="0px";
                    document.getElementsByClassName("resize-s")[0].style.marginRight = "0px";
                    document.getElementsByClassName("resize-r")[0].style.marginBottom = "0px";
                    document.getElementsByClassName("resize-z")[0].style.marginBottom  = "0px";
                    document.getElementsByClassName("resize-s")[0].style.marginBottom  = "0px";
                }
            },10);
        }
        function listDifferentLightningLoading(val, opacity) {
            switch (val){
                case 0:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("loading-l")[0].style.opacity = opacity;
                            listDifferentLightningLoading(val,opacity);
                        }
                    },50);
                    break;
                case 1:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("loading-o")[0].style.opacity = opacity;
                            listDifferentLightningLoading(val,opacity);
                        }
                    },50);
                    break;
                case 2:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("loading-a")[0].style.opacity = opacity;
                            listDifferentLightningLoading(val,opacity);
                        }
                    },50);
                    break;
                case 3:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("loading-d")[0].style.opacity = opacity;
                            listDifferentLightningLoading(val,opacity);
                        }
                    },50);
                    break;
                case 4:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("loading-i")[0].style.opacity = opacity;
                            listDifferentLightningLoading(val,opacity);
                        }
                    },50);
                    break;
                case 5:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("loading-n")[0].style.opacity = opacity;
                            listDifferentLightningLoading(val,opacity);
                        }
                    },50);
                    break;
                case 6:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("loading-g")[0].style.opacity = opacity;
                            listDifferentLightningLoading(val,opacity);
                        }
                    },50);
                    break;
            }
        }

        /**
         * change opacity so it feels likes it shining
         * and call function recursive to incresse the opacity
         *
         * @param val
         * @param opacity
         * */
        function listDifferentLightning(val, opacity) {
            switch (val){
                case 0:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("resize-r")[0].style.opacity = opacity;
                            listDifferentLightning(val,opacity);
                        }
                    },50);
                    break;
                case 1:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("resize-e")[0].style.opacity = opacity;
                            listDifferentLightning(val,opacity);
                        }
                    },50);
                    break;
                case 2:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("resize-s")[0].style.opacity = opacity;
                            listDifferentLightning(val,opacity);
                        }
                    },50);
                    break;
                case 3:
                    setTimeout(function () {
                        if(opacity < 1) {
                            opacity += 0.05;
                            document.getElementsByClassName("resize-ione")[0].style.opacity = opacity;
                            listDifferentLightning(val,opacity);
                        }
                    },50);
                    break;
                case 4:
                    setTimeout(function () {
                        opacity += 0.05;
                        if(opacity < 1) {
                            document.getElementsByClassName("resize-z")[0].style.opacity = opacity;
                            listDifferentLightning(val,opacity);
                        }
                    },50);
                    break;
                case 5:
                    setTimeout(function () {
                        opacity += 0.05;
                        if(opacity < 1) {
                            document.getElementsByClassName("resize-itwo")[0].style.opacity = opacity;
                            listDifferentLightning(val,opacity);
                        }
                    },50);
                    break;
                case 6:
                    setTimeout(function () {
                        opacity += 0.05;
                        if(opacity < 1) {
                            document.getElementsByClassName("resize-n")[0].style.opacity = opacity;
                            listDifferentLightning(val,opacity);
                        }
                    },50);
                    break;
                case 7:
                    setTimeout(function () {
                        opacity += 0.05;
                        if(opacity < 1) {
                            document.getElementsByClassName("resize-g")[0].style.opacity = opacity;
                            listDifferentLightning(val,opacity);
                        }
                    },50);
                    break;
            }
        }
        function changeOpacityOnEveryLoadingElement(opacity) {
            document.getElementsByClassName("loading-l")[0].style.opacity = opacity;
            document.getElementsByClassName("loading-o")[0].style.opacity = opacity;
            document.getElementsByClassName("loading-a")[0].style.opacity = opacity;
            document.getElementsByClassName("loading-d")[0].style.opacity = opacity;
            document.getElementsByClassName("loading-i")[0].style.opacity = opacity;
            document.getElementsByClassName("loading-n")[0].style.opacity = opacity;
            document.getElementsByClassName("loading-g")[0].style.opacity = opacity;
        }

        function changeOpacityOnEveryResizeElement(opacity) {
            document.getElementsByClassName("resize-r")[0].style.opacity = opacity;
            document.getElementsByClassName("resize-e")[0].style.opacity = opacity;
            document.getElementsByClassName("resize-s")[0].style.opacity = opacity;
            document.getElementsByClassName("resize-ione")[0].style.opacity = opacity;
            document.getElementsByClassName("resize-z")[0].style.opacity = opacity;
            document.getElementsByClassName("resize-itwo")[0].style.opacity = opacity;
            document.getElementsByClassName("resize-n")[0].style.opacity = opacity;
            document.getElementsByClassName("resize-g")[0].style.opacity = opacity;
        }
        function fadeAwayDiv(div, opacity) {
            setTimeout(function () {
                if(opacity > 0){
                    opacity -= 0.05;
                    div.style.opacity = opacity;
                    fadeAwayDiv(opacity)
                }else{
                    hideDive(div);
                }
            },100)
        }
        function fadeInLoading(opacity) {
            setTimeout(function () {
                if(opacity < 1){
                    opacity += 0.05;
                    changeOpacityOnEveryLoadingElement(opacity);
                    fadeInLoading(opacity)
                }else{

                }
            },10)
        }
        function fadeAwayLoading(opacity) {
            setTimeout(function () {
                if(opacity > 0){
                    opacity -= 0.05;
                    changeOpacityOnEveryLoadingElement(opacity);
                    fadeAwayLoading(opacity)
                }else{

                }
            },10)
        }
        function fadeInResize(opacity){
            setTimeout(function () {
                if(opacity < 1){
                    opacity += 0.05;
                    changeOpacityOnEveryResizeElement(opacity);
                    fadeInResize(opacity)
                }else{

                }
            },10)
        }

        /**
         * End of the resize effext
         * fade away the resize text
         * and reload the page to enter the loading
         * screen effect
         *
         * @param opacity
         * */
        function fadeAwayResize(opacity) {
            setTimeout(function () {
                if(opacity > 0){
                    opacity -= 0.05;
                    changeOpacityOnEveryResizeElement(opacity);
                    fadeAwayResize(opacity)
                }else{
                  //  window.location.reload();
                }
            },5)
        }



        function clearOpacityOnLoadingBackground(child,childrens) {
            if(child < childrens.length) {
                childrens[child].style.opacity = "0";
                child++;
                clearOpacityOnLoadingBackground(child,childrens);
            }
        }
        /**
         * get randomnumber
         * between 0-100
         * */
        function randomChild() {
            return Math.floor(Math.random() * 100);
        }

        /**
         * Redraw one of the child nodes
         * in a delay time out
         * each nodes is access by a random number
         * all numbers are check if they are already setted
         * by using a hashmap to store used values
         *
         * @param child
         * @param childrens
         * @param numberUsed
         * */
        function redrawChildNodes(child,childrens, numberUsed){
            setTimeout(function () {
                if (!checkIfNodeKeeperHasValue(numberUsed)) {
                    childrens[numberUsed].style.opacity = "1";
                    childrens[numberUsed].style.zIndex = "1001";
                    nodeKeeper[child] = numberUsed;
                    animateLoadingEnd(childrens[numberUsed], 0);
                    child++;
                    redrawChildNodes(child, childrens, randomChild());
                } else {
                    if (child < childrens.length) {
                        redrawChildNodes(child, childrens, randomChild())
                    }else{
                        console.log("end");

                    }
                }
            }, 1)
        }
        /***
         * check if number already
         * exist in the nodeKeeper
         * return boolean true if it does
         * otherwise false
         * @param numberUsed
         * */
        function checkIfNodeKeeperHasValue(numberUsed) {
            for(var i = 0; i < Object.size(nodeKeeper); i++){
                if(nodeKeeper[i] == numberUsed){
                    return true;
                }
            }
            return false;
        }
        /***
         *
         * @param obj
         * @return size of java object hashMap var new = {} :D
         * */
        Object.size = function(obj) {
            var size = 0, key;
            for (key in obj) {
                if (obj.hasOwnProperty(key)) size++;
            }
            return (size);
        };

        /***
         * increase opacity of each
         * childnode placed in the animation loop
         * @param child
         * @parama opacity
         * */
        function animateLoadingEnd(child, opacity) {
            setTimeout(function () {
                if(opacity < 1) {
                    opacity += 0.05;
                    child.style.opacity = opacity;
                    animateLoadingEnd(child, opacity)
                }
            },1)
        }

        /***
         * Preload the content
         * like a fade in function
         * @param child
         * @param opacity
         */
        function preLoadContent(child, opacity) {
            setTimeout(function () {
                if(opacity > 0) {
                    opacity -= 0.05;
                    child.style.opacity = opacity;
                    preLoadContent(child, opacity)
                }
            },50)
        }

        function hideDive(div) {
            div.style.visibility = 'hidden';
            div.style.display = 'none';
        }
        init();
        navBars.navProjects.addEventListener("click",function () {
            hoverStates.project = true;
            if(!stateOfButtons.projectState) {
                stateOfPage.projects = true;
                $("#content-container").
                html("<%= escape_javascript(render partial: 'layouts/home/render_home',locals: { state: "index" }) %>").fadeOut("slow");
                stateManager.projectForward();
                /**
                 * Ajax calls
                 * */
                setTimeout(function () {
                    history.pushState('projects', document.title, '/' + 'projects');
                    $("#content-container").
                    html("<%= escape_javascript(render partial: 'layouts/projects/render_projects', locals: { state: "alla?" }) %>").fadeIn("slow");
                    localStorage.previousState = "projects";
                }, 4000);
            }else{
                stateOfPage.projects = false;
                $("#content-container").
                html("<%= escape_javascript(render partial: 'layouts/projects/render_projects',locals: { state: "index" }) %>").fadeOut("slow");
                stateKeeper._setSate('home');
                stateKeeper._setPreviousState('projects');
                stateKeeper._initializeState();
                history.pushState('home', document.title, '/' + 'home');
                localStorage.previousState = "projects";
                stateOfButtons.projectState = false;
            }
        });
        navBars.navContact.addEventListener("click",function () {
            hoverStates.contact = true;
            if(!stateOfButtons.contactState) {
                stateManager.contactForward();
                $("#content-container").
                html("<%= escape_javascript(render partial: 'layouts/home/render_home',locals: { state: "index" }) %>").fadeOut("slow");
                /**
                 * Ajax calls
                 * */
                setTimeout(function () {
                    history.pushState('contact', document.title, '/' + 'contact');
                    $("#content-container").
                    html("<%= escape_javascript(render partial: 'layouts/contact/render_contact', locals: { state: "alla?" }) %>");
                    localStorage.previousState = "contact";
                }, 4000);
            }else{
                $("#content-container").
                html("<%= escape_javascript(render partial: 'layouts/contact/render_contact',locals: { state: "index" }) %>").fadeOut("slow");
                stateKeeper._setSate('home');
                stateKeeper._setPreviousState('contact');
                stateKeeper._initializeState();
                history.pushState('home', document.title, '/' + 'home');
                localStorage.previousState = "contact";
                stateOfButtons.contactState = false;
            }

        });
        navBars.navAbout.addEventListener("click",function () {
            hoverStates.about = true;
            if(!stateOfButtons.aboutState) {
                stateManager.aboutForward();
                $("#content-container").
                html("<%= escape_javascript(render partial: 'layouts/home/render_home',locals: { state: "index" }) %>").fadeOut("slow");

                /**
                 * Ajax calls
                 * */
                setTimeout(function () {
                    history.pushState('about', document.title, '/' + 'about');
                    $("#content-container").
                    html("<%= escape_javascript(render partial: 'layouts/about/render_about', locals: { state: "alla?" }) %>");
                    localStorage.previousState = "about";
                }, 4000);
            }else{
                $("#content-container").
                html("<%= escape_javascript(render partial: 'layouts/about/render_about',locals: { state: "index" }) %>").fadeOut("slow");
                stateKeeper._setSate('home');
                stateKeeper._setPreviousState('about');
                stateKeeper._initializeState();
                history.pushState('home', document.title, '/' + 'home');
                localStorage.previousState = "about";
                stateOfButtons.aboutState = false;
            }
        });

        $(navBars.navAbout).hover(
            function () {
                textAnimationAbout._addTextHover();
            },
            function (e) {
                if(!hoverStates.about)
                    textAnimationAbout._removeTextHover();
            }
        );
        $(navBars.navContact).hover(
            function () {
                textAnimationContact._addTextHover();
            },
            function () {
                if(!hoverStates.contact)
                    textAnimationContact._removeTextHover();
            }
        );
        $(navBars.navProjects).hover(
            function () {
                textAnimationProject._addTextHover();
            },
            function () {
                if(!hoverStates.project) {
                    textAnimationProject._removeTextHover();
                }
            }
        );
    });

    var PagingEffect = {
        container: "macintosh",
        numberOfEffect: 8,
        interval:[],
        intervalID: 0,
        about: 0,
        pagingReader: false,
        _instance: null,
        _backButton: false,
        applyNodes: function () {
            for(var i = 0; i < this.numberOfEffect; i++){
                console.log("waddup?==");
                var div = document.createElement("div");
                div.className = "pagechange-content";
                var progressbar = document.createElement("div");
                progressbar.className = "pagechange-progress";
                div.appendChild(progressbar);
                this.container.appendChild(div);
            }
        },
        checkIfPaginEffectIsDon: function (margin,counter,navBar,
                                           childNodes, navBars,
                                           state,textAnimation, backButton) {
            var interval = setInterval(function(){
                if(counter > 1){
                    counter++;
                    PagingEffect.checkIfPaginEffectIsDon(margin,
                        counter,navBar, childNodes,
                        navBars, state,textAnimation, backButton);
                }else{
                    clearInterval(interval);
                    PagingEffect.moveNavBar(margin,
                        navBar, childNodes, navBars, state,
                        textAnimation, backButton);

                }
            },400);
        },
        moveNavBar: function (margin, navBar, childNodes, navBars,
                              state, textAnimation, backButton) {
            if(!backButton) {
                PagingEffect.startEffect(navBar,
                    navBars, state, textAnimation);
            }
            else {
                PagingEffect.startHomeEffect(navBar, navBars, state);
            }

            textAnimation._addTextHover();
            (function (textAnimation,navBar,backButton) {
                setTimeout(function () {
                    textAnimation._moveCharOnTimeOut(
                        textAnimation, navBar, backButton, state);
                },1000)
            }(textAnimation,navBar,backButton));

        },
        startHomeEffect: function (navBar, navBars, state) {
            navBar.style.zIndex ="";
            navBar.style.marginLeft = "";
            navBar.classList.remove("startTransition");
            /**
             * temporary pageWrapper hide!!!!!
             * */
            $("#page-wrapper").hide();
            switch (state){
                case 'about':
                    setTimeout(function () {
                        navBars.navContact.style.zIndex = "1001";
                        navBars.navProjects.style.zIndex = "1001";
                    },3000);
                    break;
                case 'projects':
                    setTimeout(function () {
                        navBars.navContact.style.zIndex = "1001";
                        navBars.navAbout.style.zIndex = "1001";
                    },3000);
                    break;
                case 'contact':
                    setTimeout(function () {
                        navBars.navAbout.style.zIndex = "1001";
                        navBars.navProjects.style.zIndex = "1001";
                    },3000);
                    break;
            }
        },
        /**
         * Begin the paging effect by fading out the other
         * navbars and only keeping the clicked one,
         * Setting a new position for bounce animation
         * */
        startEffect: function (navBar, navBars, state, textAnimation) {
            navBar.style.zIndex ="1001";
            //navBar.style.marginLeft = "-50px";
            //navBar.style.marginBottom = "-50px";
            navBar.classList.add("startTransition");
            switch (state){
                case 'about':
                    $(navBars.navContact).fadeOut("slow");
                    $(navBars.navProjects).fadeOut("slow");
                    break;
                case 'projects':
                    $(navBars.navContact).fadeOut("slow");
                    $(navBars.navAbout).fadeOut("slow");
                    break;
                case 'contact':
                    $(navBars.navProjects).fadeOut("slow");
                    $(navBars.navAbout).fadeOut("slow");
                    break;
            }
        }
    };




</script>
<nav>
</nav>
<div id="super-container">
  <div id="resize-container">
    <div id="load-container"></div>
    <div id="load-text">
      <div class="loading-parent">
        <ul id="resize-list">
        </ul>
        <ul id="loading-list">
        </ul>
      </div>
    </div>
  </div>

  <%=link_to(contact_index_path({state:'contact'}), data: "eon",class: "navItem navItemContact", rel: "Contact", id: "navContact", remote:true) do%>
      <span class="text" id="text-contacts"></span>
      <span class="navigationBackContact" id="backNavContact"/>
  <%end%>
  <%=link_to(projects_path({state:'projects'}), data: "eon",class: "navItem navItemProjects", rel: "Projects", id: "navProjects", remote:true) do%>
      <span class="text" id="text-projects"></span>
      <span class="navigationBackProjects" id="backNavProjects"/>
  <%end%>
  <%=link_to(about_index_path({state:'about'}), data: "eon",class: "navItem navItemAbout", rel: "About", id: "navAbout", remote:true) do%>
      <span class="text" id="text-about"></span>
      <span class="navigationBack" id="backNavAbout">
      </span>
  <%end%>
  <div id="page-wrapper">
  </div>
  <div id="content-container">
    <%logger.info "#{@state}" %>
    <%if(@state.nil?) %>
        <%= render partial: 'layouts/home/render_home'%>
    <%else%>
        <% if(@state == "home") %>
            <%= render partial: 'layouts/home/render_home'%>
        <%end%>

        <% if(@state == "about") %>
            <%= render partial: 'layouts/about/render_about'%>
        <%end%>
        <% if(@state == "projects") %>
            <%= render partial: 'layouts/projects/render_projects'%>
        <%end%>
        <% if(@state == "contact") %>
            <%= render partial: 'layouts/contact/render_contact'%>
        <%end%>
    <%end%>
  </div>
</div>
