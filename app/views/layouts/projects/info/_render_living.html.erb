
<script>

    document.body.style.overflow ="";
    document.getElementById("content-container").style.overflow = "";

    document.getElementById("projectPage").style.marginTop = "0px";

    window.history.replaceState('living',null,'/' + 'projects' + '/living');
    insideProjects = false;
    console.log("jamramrwrawrawin dadawdjgaw?? living jounry?????");
    window.addEventListener('popstate', function(e) {

    });
    var test = document.getElementsByClassName("back-nav-project");
    $(test).hover(function () {
            $("#projectBackID").addClass("hoverClass");
            $("#projectBackID").removeClass("hoverClassOut");
        },
        function () {
            $("#projectBackID").removeClass("hoverClass");
            $("#projectBackID").addClass("hoverClassOut");
        }
    );
    $(document).ready(function () {
        var charArray = ['Y','a','t','z','y'];
        var headerTextContainer = document.getElementById("holder-header-id").children[0];
        var textAnimation = new TextAnimationProject(document.getElementById("holder-header-id").children[0], charArray);
        var mainNavigationBar = document.getElementById("navProjects");
        $(mainNavigationBar).hide();
        textAnimation.removeLetters();
        textAnimation.initializeLetters();
        setTimeout(function () {
            document.getElementById("holder-picture-id").style.height = "300px";
        },500);
        setTimeout(function () {
            document.getElementById("holder-header-id").style.top = "220px";
            document.getElementById("holder-header-id").style.opacity = "1";
            document.getElementById("holder-text-id").style.opacity = "1";
        },2500);

        function loadInHeader(div, numbOfChars, start){
            setTimeout(function () {
                if(start < numbOfChars ) {
                    start +=0.1;
                    div.style.opacity = start;
                    loadInHeader(div)
                }
            },100);
        }

    });
    function TextAnimationProject(context, letters) {
        this.context = context;
        this.letters = letters;
        this.interval = [];
        this.textDivTags = [];
        this._animationSetted = false;
        this.removeLetters = function () {
            while(this.context.firstChild){
                this.context.removeChild(this.context.firstChild);
            }
        };
        this.initializeLetters = function() {
            this.context.style.width = $(window).height() + "px";
            for(var i = 0; i < this.letters.length; i++){
                var div = document.createElement("div");
                div.className = "char chars"+i;
                div.id = "id-chars"+i;
                var checkDiv = "id-chars"+i;
                //div.style.float = "left";
                var innerText = document.createElement("div");
                innerText.className = "char-inner";
                innerText.innerHTML = letters[i];
                div.appendChild(innerText);
                var hasChild = this.context.querySelector(div.id) != null;

                this.context.appendChild(div);

            }
        };
        this.initializeTags = function () {
            var childs = this.context.childNodes;
            for(var i = 0; i < Object.size(childs); i++){
                this.textDivTags.push(childs[i].childNodes[0]);
            }
            this._animationSetted = true;
        }
        this._checkIfIfCharAlreadyExist = function (childNodes) {
            console.log(childNodes.length);
            for(var i = 0; i < childNodes.length; i++) {
                console.log(childNodes[i].id);
                if (childNodes[i].id == "id-chars"+i) {
                    this._animationSetted = true;
                } else {
                    console.log("in else duplicates");
                    this._animationSetted = false;
                }
            }

        };
    }

</script>
<div class="jumbotron vertical-center project-show">
  <div class="back-nav-project" id="backNavProjects">
    <%=link_to(projects_path({state:'projwt', page: 'yatzy'}), remote:true) do%>
        <div id="crossBox">
          <span class="projectBack" id="projectBackID"/>
        </div>
    <%end%>
  </div>
  <div id="info-show">
    <div class="container">
      <div class="row">
        <div class="col-md-6 col-centered info-content">
          <div class="picture-holder" id="holder-picture-id">
            <%=image_tag("https://images.unsplash.com/photo-1510778670743-06254c768dad?dpr=1&auto=format&fit=crop&w=1000&q=80&cs=tinysrgb&ixid=dW5zcGxhc2guY29tOzs7Ozs%3D")%>
          </div>
          <div class="header-holder" id="holder-header-id">
              <span class="header-text" id="header-textID">
              </span>
          </div>
        </div>
        <div class="col-md-6 col-centered info-content">
          <div class="col-md-12">
            <div class="text-content-holder" id="holder-text-id">
              <p>
                The oldschool game yatzy made for android device. Can be played
                alone and with friends up to 4 player. The game is still in beta
                and has not been released on Google play. Game visualize dice
                throws using openGL(3D animation).
              </p>
            </div>
          </div>
          <div class="col-md-12">
            <div class="col-md-6 col-centered" id="buttonsView">
              <button class="btn draw-border" id="webSiteButton" onclick="location.href='https://www.magazinos.com/';">
                GitHub
              </button>
            </div>
            <div class="col-md-4  col-centered">
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>