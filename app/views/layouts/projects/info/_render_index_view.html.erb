<script>
  $(document).ready(function () {
      document.body.style.overflow ="scroll";
      document.getElementById("content-container").style.overflow = "scroll";
      document.getElementById("projectPage").style.marginTop = "";
      var magaArray = ['m','a','g','a','z','i','n','o','s'];
      var textAnimationMagazinos = new TextAnimationProjectView(
              document.getElementById("magaHeaderText").children[0], magaArray
          );

      var lagArray = ['l','a','g','g'];
      var textAnimationLag = new TextAnimationProjectView(
              document.getElementById("googleglassHeaderText").children[0], lagArray
          );
      var oneBasArray = ['o','n','e','B','A','S','.','c','o','m'];
      var textAnimationOneBas = new TextAnimationProjectView(
              document.getElementById("onebasHeaderText").children[0], oneBasArray
          );
      var livingArray = ['Y','a','t','z','y'];
      var textAnimationLiving = new TextAnimationProjectView(
          document.getElementById("livingHeaderText").children[0], livingArray
      );

      textAnimationMagazinos.removeLetters();
      textAnimationMagazinos.initializeLetters();
      textAnimationLag.removeLetters();
      textAnimationLag.initializeLetters();
      textAnimationLiving.removeLetters();
      textAnimationLiving.initializeLetters();
      textAnimationOneBas.removeLetters();
      textAnimationOneBas.initializeLetters();
      function TextAnimationProjectView(context, letters) {
          this.context = context;
          this.letters = letters;
          this.interval = [];
          this.textDivTags = [];
          this._animationSetted = false;
          this.removeLetters = function () {
              while(this.context.firstChild){
                  this.context.removeChild(this.context.firstChild);
              }
          };
          this.initializeLetters = function() {
              this.context.style.width = 500 + "px";
              for(var i = 0; i < this.letters.length; i++){
                  var div = document.createElement("div");
                  div.className = "char chars"+i;
                  div.id = "id-chars"+i;
                  //div.style.float = "left";
                  var innerText = document.createElement("div");
                  innerText.className = "char-inner";
                  innerText.innerHTML = letters[i];
                  div.appendChild(innerText);
                  var hasChild = this.context.querySelector(div.id) != null;

                  this.context.appendChild(div);

              }
          };
          this.initializeTags = function () {
              var childs = this.context.childNodes;
              for(var i = 0; i < Object.size(childs); i++){
                  if(childs[i].childNodes[0] != undefined) {
                      this.textDivTags.push(childs[i].childNodes[0]);
                  }
              }
              this._animationSetted = true;
          };
          this._checkIfIfCharAlreadyExist = function (childNodes) {
              console.log(childNodes.length);
              for(var i = 0; i < childNodes.length; i++) {
                  console.log(childNodes[i].id);
                  if (childNodes[i].id == "id-chars"+i) {
                      this._animationSetted = true;
                  } else {
                      console.log("in else duplicates");
                      this._animationSetted = false;
                  }
              }

          };
          this._hoverIn = function () {
              var childs = this.context.childNodes;
              var addClass = false, addTop = false;
              for(var i = 0; i < loopLength(childs); i++){
                  if(addClass) {
                      $(childs[i].childNodes[0]).addClass("hoverTop");
                      $(childs[i].childNodes[0]).removeClass("hoverProjectOut");
                      addClass = false;
                      addTop = true;

                  }else if(addTop){
                      $(childs[i].childNodes[0]).addClass("hoverBot");
                      $(childs[i].childNodes[0]).removeClass("hoverProjectOut");
                      addTop = false;
                  }else if(!addTop && !addClass){
                      $(childs[i].childNodes[0]).addClass("hoverNormal");
                      $(childs[i].childNodes[0]).removeClass("hoverProjectOut");
                      addClass = true;
                  }
              }
          };
          this._hoverOut = function () {
              var childs = this.context.childNodes;
              var addClass = false, addTop = false;
              for(var i = 0; i < loopLength(childs); i++){
                  if(addClass) {
                      $(childs[i].childNodes[0]).removeClass("hoverTop");
                      $(childs[i].childNodes[0]).addClass("hoverProjectOut");
                      addClass = false;
                      addTop = true;
                  }
                  if(addTop){
                      $(childs[i].childNodes[0]).removeClass("hoverBot");
                      $(childs[i].childNodes[0]).addClass("hoverProjectOut");
                      addTop = false;
                  }
                  if(!addTop && !addClass){
                      $(childs[i].childNodes[0]).removeClass("hoverNormal");
                      $(childs[i].childNodes[0]).addClass("hoverProjectOut");
                      addClass = true;
                  }
              }
          };
      }

      var linkButton = document.getElementById("project-tag");
      var projectPictureUrl = [
          "https://images.unsplash.com/photo-1415769177894-634a98172336?dpr=2&auto=format&fit=crop&w=1500&h=1000&q=80&cs=tinysrgb&crop=", //magazinos pic
          "https://images.unsplash.com/photo-1477233534935-f5e6fe7c1159?dpr=2&auto=format&fit=crop&w=1500&h=1000&q=80&cs=tinysrgb&crop=",//onebas pic
          "https://images.unsplash.com/photo-1510778670743-06254c768dad?dpr=1&auto=format&fit=crop&w=1000&q=80&cs=tinysrgb&ixid=dW5zcGxhc2guY29tOzs7Ozs%3D", //drone pic,
          "https://images.unsplash.com/photo-1478826160983-e6db8c7d537a?dpr=2&auto=format&fit=crop&w=1500&h=1000&q=80&cs=tinysrgb&crop=", //google glass pic
          "https://images.unsplash.com/photo-1423068657086-889315a2eba8?dpr=2&auto=format&fit=crop&w=1500&h=1000&q=80&cs=tinysrgb&crop=", //moodify pic
          "http://marcianosmx.com/wp-content/uploads/2015/03/dados.jpg" //thirty pic
      ];
      var projectID = [
          document.getElementById("magazinos"),
          document.getElementById("onebas"),
          document.getElementById("living"),
          document.getElementById("googleglass")
      ];
      var textAnimations = [
          textAnimationMagazinos,
          textAnimationOneBas,
          textAnimationLiving,
          textAnimationLag
      ];

      function projectListItem(imgSrc, containerName, row,
                               column, margin, animTime, textAnimation) {
          this.imgSrc = imgSrc;
          this.containerName = containerName;
          this.rows = row;
          this.columns = column;
          this.margin = margin;
          this.animTime = animTime;
          this._textAnimation = textAnimation;
      }

      function ImageGrid(defaults) {
          var r = defaults.rows;
          var c = defaults.columns;
          var margin = defaults.margin;
          var _deadSpace = 80;
          var placeholder = defaults.containerName.children[0].children[0];
          var container = document.createElement('div');
          console.log(defaults.containerName.children[0].children[0]);
          container.className = "gridContainer";
          placeholder.appendChild(container);

          var gridTile;

          var w = ((container.offsetWidth - _deadSpace) / c) -margin;
          var h = ((container.offsetHeight - _deadSpace) / r) -margin;
          var arr = [];
          for (var i=0, l=r*c; i < l; i++) {
              gridTile = document.createElement('div');
              gridTile.className = "gridTile";
              gridTile.style.backgroundImage = "url("+defaults.imgSrc+")";
              arr = [((w+margin)*(i%c) + (_deadSpace/2)), ((h+margin)*Math.floor(i/c))+ (_deadSpace/2), ((w+margin)*(i%c)+w-margin)+ (_deadSpace/2), ((h+margin)*Math.floor(i/c))+ (_deadSpace/2), (((w+margin)*(i%c)+w-margin))+ (_deadSpace/2), ((h+margin)*Math.floor(i/c) + h-margin)+ (_deadSpace/2), ((w+margin)*(i%c))+ (_deadSpace/2), ((h+margin)*Math.floor(i/c) + h-margin)+ (_deadSpace/2)];
              TweenMax.set(gridTile, {webkitClipPath:'polygon('+arr[0]+'px '+ arr[1]+'px,'+arr[2]+'px '+arr[3]+'px, '+arr[4]+'px '+ arr[5] +'px, '+arr[6]+'px '+ arr[7] +'px)', clipPath:'polygon('+arr[0]+'px '+ arr[1]+'px,'+arr[2]+'px '+arr[3]+'px, '+arr[4]+'px '+ arr[5] +'px, '+arr[6]+'px '+ arr[7] +'px)'});
              container.appendChild(gridTile);
          }
          //polygons works like this
          // xdirection = (array[0] array[6] minimize) and (array[2] and array[4] size)
          // ydirection = ((array[5] array[7]) size) and (array[1] and array[3] minimize)
          function stylePoly(tilePosition,xDirection, yDirection) {
              var w = ((container.offsetWidth - _deadSpace) / c) -margin;
              var h = ((container.offsetHeight - _deadSpace) / r) -margin;
              var arr = [(((w+margin)*(tilePosition%c) + (_deadSpace/2))+xDirection), //minimize one side on x
                      ((((h+margin)*Math.floor(tilePosition/c))+ (_deadSpace/2)) + yDirection), //minimize one side on y
                      ((((w+margin)*(tilePosition%c)+w-margin)+ (_deadSpace/2)) + xDirection), //increase size one side on x
                      ((((h+margin)*Math.floor(tilePosition/c))+ (_deadSpace/2)) + yDirection), //minimize one side on y
                      (((((w+margin)*(tilePosition%c)+w-margin))+ (_deadSpace/2)) + xDirection), //increase size one side on x
                      ((((h+margin)*Math.floor(tilePosition/c) + h-margin)+ (_deadSpace/2)) + yDirection), //increase size one side on y
                      ((((w+margin)*(tilePosition%c))+ (_deadSpace/2)) + xDirection), // increase size one side on x
                      ((((h+margin)*Math.floor(tilePosition/c) + h-margin)+ (_deadSpace/2)) + yDirection) //increase size one side on y
                  ];
              return {webkitClipPath:'polygon('+arr[0]+'px '+ arr[1]+'px,'+arr[2]+'px '+arr[3]+'px, '+arr[4]+'px '+ arr[5] +'px, '+arr[6]+'px '+ arr[7] +'px)', clipPath:'polygon('+arr[0]+'px '+ arr[1]+'px,'+arr[2]+'px '+arr[3]+'px, '+arr[4]+'px '+ arr[5] +'px, '+arr[6]+'px '+ arr[7] +'px)'};
          }
          function stylePolyMain(tilePosition,xDirection, yDirection) {
              var w = ((container.offsetWidth - _deadSpace) / c) -margin;
              var h = ((container.offsetHeight - _deadSpace) / r) -margin;
              var arr = [((w+margin)*(tilePosition%c) + (_deadSpace/2)), //minimize one side on x
                  (((h+margin)*Math.floor(tilePosition/c))+ (_deadSpace/2)), //minimize one side on y
                  (((w+margin)*(tilePosition%c)+w-margin)+ (_deadSpace/2)), //increase size one side on x
                  (((h+margin)*Math.floor(tilePosition/c))+ (_deadSpace/2)), //minimize one side on y
                  (((((w+margin)*(tilePosition%c)+w-margin))+ (_deadSpace/2)) + xDirection), //increase size one side on x
                  ((((h+margin)*Math.floor(tilePosition/c) + h-margin)+ (_deadSpace/2)) + yDirection), //increase size one side on y
                  ((((w+margin)*(tilePosition%c))+ (_deadSpace/2)) + xDirection), // increase size one side on x
                  ((((h+margin)*Math.floor(tilePosition/c) + h-margin)+ (_deadSpace/2)) + yDirection) //increase size one side on y
              ];
              return {webkitClipPath:'polygon('+arr[0]+'px '+ arr[1]+'px,'+arr[2]+'px '+arr[3]+'px, '+arr[4]+'px '+ arr[5] +'px, '+arr[6]+'px '+ arr[7] +'px)', clipPath:'polygon('+arr[0]+'px '+ arr[1]+'px,'+arr[2]+'px '+arr[3]+'px, '+arr[4]+'px '+ arr[5] +'px, '+arr[6]+'px '+ arr[7] +'px)'};
          }
          var _tileTwo = container.querySelectorAll(".gridTile")[1];
          var _tileThree = container.querySelectorAll(".gridTile")[2];
          var _tileFour = container.querySelectorAll(".gridTile")[3];
          var _tileTimelineHoverOut = new TimelineMax({paused:true});
          var _tileTimelineHoverIn = new TimelineMax({paused:true});
          defaults._textAnimation._hoverIn();
          testPolygons();
          playAnimations();
          setGreyFilter();
          normalizeTileOne();
          $(placeholder).hover(function () {
                if(defaults._textAnimation !=null)
                    defaults._textAnimation._hoverOut();
                stopAnimations();
            },
            function () {
                if(defaults._textAnimation !=null)
                    defaults._textAnimation._hoverIn();
                playAnimations();
              }
          );
          function setGreyFilter() {
              var allTiles = container.querySelectorAll(".gridTile");
              for (var t=0, len = allTiles.length; t < len; t++) {
                 // allTiles[t].style.WebkitFilter = "grayscale(90%)";
                 // allTiles[t].style.filter = "url(filters.svg#grayscale)";
                  //allTiles[t].style.filter = "gray";
                  //allTiles[t].style.filter = "grayscale(90%)";
              }
          }
          function backgroundPosition(tileY, tileX){
              var moveY = 0, moveX = 0;
              if(tileY != null)
                  moveY = tileY;
              if(tileX != null)
                  moveX = tileX;
              return {backgroundPosition: moveY+"px "+moveX + "px"};
          }
          function normalizeTileOne() {
              var tileOne = container.querySelectorAll(".gridTile")[0];
              tileOneAni = TweenMax.to(tileOne, 0.2, {css:stylePolyMain(0,0,20)});
          }
          function testPolygons() {

              /*tile four in timeline*/
              _tileTimelineHoverOut
                  .to(_tileFour, 0.2, {css:stylePoly(3,0,20),rotation:0.01,ease:Linear.easeNone},0)
                  .to(_tileTwo, 0.2, {css:stylePoly(1,0,20),rotation:0.01,ease:Linear.easeNone},0)
                  .to(_tileFour, 0.2, {css:backgroundPosition(0,20),rotation:0.01,ease:Linear.easeNone},0)
                  .to(_tileTwo, 0.2, {css:backgroundPosition(0,20),rotation:0.01,ease:Linear.easeNone},0)
                  .add("sideMovement",0.2)
                  .to(_tileFour,0.2,{css:backgroundPosition(-20,20),rotation:0.01,ease:Linear.easeNone}, "sideMovement")
                  .to(_tileFour,0.2,{css:stylePoly(3,-20,20),rotation:0.01,ease:Linear.easeNone}, "sideMovement")
                  .to(_tileThree, 0.2,{css:backgroundPosition(-20,0),rotation:0.01,ease:Linear.easeNone}, "sideMovement")
                  .to(_tileThree, 0.2,{css:stylePoly(2,-20,0),rotation:0.01,ease:Linear.easeNone}, "sideMovement");

              _tileTimelineHoverIn
                  .to(_tileFour,0.2,{css:backgroundPosition(0,20),rotation:0.01,ease:Linear.easeNone}, 0)
                  .to(_tileFour,0.2,{css:stylePoly(3,0,20),rotation:0.01,ease:Linear.easeNone}, 0)
                  .to(_tileThree, 0.2,{css:backgroundPosition(0,0),rotation:0.01,ease:Linear.easeNone}, 0)
                  .to(_tileThree, 0.2,{css:stylePoly(2,0,0),rotation:0.01,ease:Linear.easeNone}, 0)
                  .add("bottomMovement",0.2)
                  .to(_tileFour, 0.2, {css:stylePoly(3,0,0),rotation:0.01,ease:Linear.easeNone}, "bottomMovement")
                  .to(_tileTwo, 0.2, {css:stylePoly(1,0,0),rotation:0.01,ease:Linear.easeNone}, "bottomMovement")
                  .to(_tileFour, 0.2, {css:backgroundPosition(0,0),rotation:0.01,ease:Linear.easeNone},"bottomMovement")
                  .to(_tileTwo, 0.2, {css:backgroundPosition(0,0),rotation:0.01,ease:Linear.easeNone},"bottomMovement");
          }
          function playAnimations() {
              _tileTimelineHoverIn.pause();
            _tileTimelineHoverOut.restart();
          }
          function stopAnimations() {
              _tileTimelineHoverOut.pause();
              _tileTimelineHoverIn.restart();
          }
      }
      var imageGirds = [];
      function initializeProjects() {
          for(var i = 0; i < 4; i++){
              (function (i) {
                  setTimeout(function () {
                      var item = new projectListItem(
                          projectPictureUrl[i],
                          projectID[i],
                          2,
                          2,
                          0,
                          1.5,
                          textAnimations[i]
                      );
                      imageGirds.push(ImageGrid(item, i));

                  },5);
              })(i);
          }
      }
      setTimeout(function () {
          initializeProjects();
      },1000);
  });
</script>


<div id="link-to">
  <div class="container">
    <div class="row">
      <div class="col-md-6">
            <div id="magazinos">
              <%=link_to(projects_magazinos_path(:state => "magazinos", page: "index"), id: "project-tag", remote:true) do%>
                <div class="placeholder">
                  <div class="filler-container">
                    <div class="filler">
                    </div>
                  </div>
                  <div class="header-container" id="magaHeaderText">
                    <span class="header-text" id="header-textID">
                    </span>
                  </div>
                </div>
              <%end%>
            </div>
      </div>
      <div class="col-md-6">
       <div id="onebas">
          <%=link_to(projects_onebas_path(:state => "onebas", page: "index"), id: "project-tag", remote:true) do%>
            <div class="placeholder">
              <div class="filler-container">
                <div class="filler">
                </div>
              </div>
              <div class="header-container" id="onebasHeaderText">
                <span class="header-text" id="header-textID">
                </span>
              </div>
            </div>
          <%end%>
        </div>
      </div>
  </div>
  <div class="row">
    <div class="col-md-6">
       <div id="living">
         <%=link_to(projects_living_path(:state => "livingmaps", page: "index"), id: "project-tag", remote:true) do%>
            <div class="placeholder">
              <div class="filler-container">
                <div class="filler">
                </div>
              </div>
              <div class="header-container" id="livingHeaderText">
                <span class="header-text" id="header-textID">
                </span>
              </div>
            </div>
          <%end%>

        </div>
    </div>
    <div class="col-md-6">
      <div id="googleglass">
        <%=link_to(projects_lag_path(:state => "googleglass"), remote:true) do%>
          <div class="placeholder">
            <div class="filler-container">
              <div class="filler">
              </div>
            </div>
            <div class="header-container" id="googleglassHeaderText">
              <span class="header-text" id="header-textID">
              </span>
            </div>
          </div>
        <%end%>
      </div>
    </div>
  </div>
  </div>
</div>